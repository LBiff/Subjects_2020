// 计算器系列
// 我们最终要实现的计算器功能如下：
// 1、输入一个字符串，可以包含+ - * /、数字、括号以及空格，你的算法返回运算结果。
// 2、要符合运算法则，括号的优先级最高，先乘除后加减。
// 3、除号是整数除法，无论正负都向 0 取整（5/2=2，-5/2=-2）。
// 4、可以假定输入的算式一定合法，且计算过程不会出现整型溢出，不会出现除数为 0 的意外情况。
// 比如输入如下字符串，算法会返回 9：
// 3 * (2-6 /(3 -7))

#include <string>
using namespace std;

// 1、字符串转整数

// 假设字符串合法,转完不溢出
int Atoi(string s)
{
    int base = 1;
    int ret = 1;
    for(int i = s.size() - 1; i >= 0; i++)
    {
        ret += base * (s[i] - '0');
        base *= 10;
    };

    return ret;
};

//处理不带括号的加减法
int calPlusMin(string s)
{
    int ret = 0;
    

}